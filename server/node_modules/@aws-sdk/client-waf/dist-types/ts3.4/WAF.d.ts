import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CreateByteMatchSetCommandInput,
  CreateByteMatchSetCommandOutput,
} from "./commands/CreateByteMatchSetCommand";
import {
  CreateGeoMatchSetCommandInput,
  CreateGeoMatchSetCommandOutput,
} from "./commands/CreateGeoMatchSetCommand";
import {
  CreateIPSetCommandInput,
  CreateIPSetCommandOutput,
} from "./commands/CreateIPSetCommand";
import {
  CreateRateBasedRuleCommandInput,
  CreateRateBasedRuleCommandOutput,
} from "./commands/CreateRateBasedRuleCommand";
import {
  CreateRegexMatchSetCommandInput,
  CreateRegexMatchSetCommandOutput,
} from "./commands/CreateRegexMatchSetCommand";
import {
  CreateRegexPatternSetCommandInput,
  CreateRegexPatternSetCommandOutput,
} from "./commands/CreateRegexPatternSetCommand";
import {
  CreateRuleCommandInput,
  CreateRuleCommandOutput,
} from "./commands/CreateRuleCommand";
import {
  CreateRuleGroupCommandInput,
  CreateRuleGroupCommandOutput,
} from "./commands/CreateRuleGroupCommand";
import {
  CreateSizeConstraintSetCommandInput,
  CreateSizeConstraintSetCommandOutput,
} from "./commands/CreateSizeConstraintSetCommand";
import {
  CreateSqlInjectionMatchSetCommandInput,
  CreateSqlInjectionMatchSetCommandOutput,
} from "./commands/CreateSqlInjectionMatchSetCommand";
import {
  CreateWebACLCommandInput,
  CreateWebACLCommandOutput,
} from "./commands/CreateWebACLCommand";
import {
  CreateWebACLMigrationStackCommandInput,
  CreateWebACLMigrationStackCommandOutput,
} from "./commands/CreateWebACLMigrationStackCommand";
import {
  CreateXssMatchSetCommandInput,
  CreateXssMatchSetCommandOutput,
} from "./commands/CreateXssMatchSetCommand";
import {
  DeleteByteMatchSetCommandInput,
  DeleteByteMatchSetCommandOutput,
} from "./commands/DeleteByteMatchSetCommand";
import {
  DeleteGeoMatchSetCommandInput,
  DeleteGeoMatchSetCommandOutput,
} from "./commands/DeleteGeoMatchSetCommand";
import {
  DeleteIPSetCommandInput,
  DeleteIPSetCommandOutput,
} from "./commands/DeleteIPSetCommand";
import {
  DeleteLoggingConfigurationCommandInput,
  DeleteLoggingConfigurationCommandOutput,
} from "./commands/DeleteLoggingConfigurationCommand";
import {
  DeletePermissionPolicyCommandInput,
  DeletePermissionPolicyCommandOutput,
} from "./commands/DeletePermissionPolicyCommand";
import {
  DeleteRateBasedRuleCommandInput,
  DeleteRateBasedRuleCommandOutput,
} from "./commands/DeleteRateBasedRuleCommand";
import {
  DeleteRegexMatchSetCommandInput,
  DeleteRegexMatchSetCommandOutput,
} from "./commands/DeleteRegexMatchSetCommand";
import {
  DeleteRegexPatternSetCommandInput,
  DeleteRegexPatternSetCommandOutput,
} from "./commands/DeleteRegexPatternSetCommand";
import {
  DeleteRuleCommandInput,
  DeleteRuleCommandOutput,
} from "./commands/DeleteRuleCommand";
import {
  DeleteRuleGroupCommandInput,
  DeleteRuleGroupCommandOutput,
} from "./commands/DeleteRuleGroupCommand";
import {
  DeleteSizeConstraintSetCommandInput,
  DeleteSizeConstraintSetCommandOutput,
} from "./commands/DeleteSizeConstraintSetCommand";
import {
  DeleteSqlInjectionMatchSetCommandInput,
  DeleteSqlInjectionMatchSetCommandOutput,
} from "./commands/DeleteSqlInjectionMatchSetCommand";
import {
  DeleteWebACLCommandInput,
  DeleteWebACLCommandOutput,
} from "./commands/DeleteWebACLCommand";
import {
  DeleteXssMatchSetCommandInput,
  DeleteXssMatchSetCommandOutput,
} from "./commands/DeleteXssMatchSetCommand";
import {
  GetByteMatchSetCommandInput,
  GetByteMatchSetCommandOutput,
} from "./commands/GetByteMatchSetCommand";
import {
  GetChangeTokenCommandInput,
  GetChangeTokenCommandOutput,
} from "./commands/GetChangeTokenCommand";
import {
  GetChangeTokenStatusCommandInput,
  GetChangeTokenStatusCommandOutput,
} from "./commands/GetChangeTokenStatusCommand";
import {
  GetGeoMatchSetCommandInput,
  GetGeoMatchSetCommandOutput,
} from "./commands/GetGeoMatchSetCommand";
import {
  GetIPSetCommandInput,
  GetIPSetCommandOutput,
} from "./commands/GetIPSetCommand";
import {
  GetLoggingConfigurationCommandInput,
  GetLoggingConfigurationCommandOutput,
} from "./commands/GetLoggingConfigurationCommand";
import {
  GetPermissionPolicyCommandInput,
  GetPermissionPolicyCommandOutput,
} from "./commands/GetPermissionPolicyCommand";
import {
  GetRateBasedRuleCommandInput,
  GetRateBasedRuleCommandOutput,
} from "./commands/GetRateBasedRuleCommand";
import {
  GetRateBasedRuleManagedKeysCommandInput,
  GetRateBasedRuleManagedKeysCommandOutput,
} from "./commands/GetRateBasedRuleManagedKeysCommand";
import {
  GetRegexMatchSetCommandInput,
  GetRegexMatchSetCommandOutput,
} from "./commands/GetRegexMatchSetCommand";
import {
  GetRegexPatternSetCommandInput,
  GetRegexPatternSetCommandOutput,
} from "./commands/GetRegexPatternSetCommand";
import {
  GetRuleCommandInput,
  GetRuleCommandOutput,
} from "./commands/GetRuleCommand";
import {
  GetRuleGroupCommandInput,
  GetRuleGroupCommandOutput,
} from "./commands/GetRuleGroupCommand";
import {
  GetSampledRequestsCommandInput,
  GetSampledRequestsCommandOutput,
} from "./commands/GetSampledRequestsCommand";
import {
  GetSizeConstraintSetCommandInput,
  GetSizeConstraintSetCommandOutput,
} from "./commands/GetSizeConstraintSetCommand";
import {
  GetSqlInjectionMatchSetCommandInput,
  GetSqlInjectionMatchSetCommandOutput,
} from "./commands/GetSqlInjectionMatchSetCommand";
import {
  GetWebACLCommandInput,
  GetWebACLCommandOutput,
} from "./commands/GetWebACLCommand";
import {
  GetXssMatchSetCommandInput,
  GetXssMatchSetCommandOutput,
} from "./commands/GetXssMatchSetCommand";
import {
  ListActivatedRulesInRuleGroupCommandInput,
  ListActivatedRulesInRuleGroupCommandOutput,
} from "./commands/ListActivatedRulesInRuleGroupCommand";
import {
  ListByteMatchSetsCommandInput,
  ListByteMatchSetsCommandOutput,
} from "./commands/ListByteMatchSetsCommand";
import {
  ListGeoMatchSetsCommandInput,
  ListGeoMatchSetsCommandOutput,
} from "./commands/ListGeoMatchSetsCommand";
import {
  ListIPSetsCommandInput,
  ListIPSetsCommandOutput,
} from "./commands/ListIPSetsCommand";
import {
  ListLoggingConfigurationsCommandInput,
  ListLoggingConfigurationsCommandOutput,
} from "./commands/ListLoggingConfigurationsCommand";
import {
  ListRateBasedRulesCommandInput,
  ListRateBasedRulesCommandOutput,
} from "./commands/ListRateBasedRulesCommand";
import {
  ListRegexMatchSetsCommandInput,
  ListRegexMatchSetsCommandOutput,
} from "./commands/ListRegexMatchSetsCommand";
import {
  ListRegexPatternSetsCommandInput,
  ListRegexPatternSetsCommandOutput,
} from "./commands/ListRegexPatternSetsCommand";
import {
  ListRuleGroupsCommandInput,
  ListRuleGroupsCommandOutput,
} from "./commands/ListRuleGroupsCommand";
import {
  ListRulesCommandInput,
  ListRulesCommandOutput,
} from "./commands/ListRulesCommand";
import {
  ListSizeConstraintSetsCommandInput,
  ListSizeConstraintSetsCommandOutput,
} from "./commands/ListSizeConstraintSetsCommand";
import {
  ListSqlInjectionMatchSetsCommandInput,
  ListSqlInjectionMatchSetsCommandOutput,
} from "./commands/ListSqlInjectionMatchSetsCommand";
import {
  ListSubscribedRuleGroupsCommandInput,
  ListSubscribedRuleGroupsCommandOutput,
} from "./commands/ListSubscribedRuleGroupsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListWebACLsCommandInput,
  ListWebACLsCommandOutput,
} from "./commands/ListWebACLsCommand";
import {
  ListXssMatchSetsCommandInput,
  ListXssMatchSetsCommandOutput,
} from "./commands/ListXssMatchSetsCommand";
import {
  PutLoggingConfigurationCommandInput,
  PutLoggingConfigurationCommandOutput,
} from "./commands/PutLoggingConfigurationCommand";
import {
  PutPermissionPolicyCommandInput,
  PutPermissionPolicyCommandOutput,
} from "./commands/PutPermissionPolicyCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateByteMatchSetCommandInput,
  UpdateByteMatchSetCommandOutput,
} from "./commands/UpdateByteMatchSetCommand";
import {
  UpdateGeoMatchSetCommandInput,
  UpdateGeoMatchSetCommandOutput,
} from "./commands/UpdateGeoMatchSetCommand";
import {
  UpdateIPSetCommandInput,
  UpdateIPSetCommandOutput,
} from "./commands/UpdateIPSetCommand";
import {
  UpdateRateBasedRuleCommandInput,
  UpdateRateBasedRuleCommandOutput,
} from "./commands/UpdateRateBasedRuleCommand";
import {
  UpdateRegexMatchSetCommandInput,
  UpdateRegexMatchSetCommandOutput,
} from "./commands/UpdateRegexMatchSetCommand";
import {
  UpdateRegexPatternSetCommandInput,
  UpdateRegexPatternSetCommandOutput,
} from "./commands/UpdateRegexPatternSetCommand";
import {
  UpdateRuleCommandInput,
  UpdateRuleCommandOutput,
} from "./commands/UpdateRuleCommand";
import {
  UpdateRuleGroupCommandInput,
  UpdateRuleGroupCommandOutput,
} from "./commands/UpdateRuleGroupCommand";
import {
  UpdateSizeConstraintSetCommandInput,
  UpdateSizeConstraintSetCommandOutput,
} from "./commands/UpdateSizeConstraintSetCommand";
import {
  UpdateSqlInjectionMatchSetCommandInput,
  UpdateSqlInjectionMatchSetCommandOutput,
} from "./commands/UpdateSqlInjectionMatchSetCommand";
import {
  UpdateWebACLCommandInput,
  UpdateWebACLCommandOutput,
} from "./commands/UpdateWebACLCommand";
import {
  UpdateXssMatchSetCommandInput,
  UpdateXssMatchSetCommandOutput,
} from "./commands/UpdateXssMatchSetCommand";
import { WAFClient } from "./WAFClient";
export interface WAF {
  createByteMatchSet(
    args: CreateByteMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateByteMatchSetCommandOutput>;
  createByteMatchSet(
    args: CreateByteMatchSetCommandInput,
    cb: (err: any, data?: CreateByteMatchSetCommandOutput) => void
  ): void;
  createByteMatchSet(
    args: CreateByteMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateByteMatchSetCommandOutput) => void
  ): void;
  createGeoMatchSet(
    args: CreateGeoMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGeoMatchSetCommandOutput>;
  createGeoMatchSet(
    args: CreateGeoMatchSetCommandInput,
    cb: (err: any, data?: CreateGeoMatchSetCommandOutput) => void
  ): void;
  createGeoMatchSet(
    args: CreateGeoMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGeoMatchSetCommandOutput) => void
  ): void;
  createIPSet(
    args: CreateIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateIPSetCommandOutput>;
  createIPSet(
    args: CreateIPSetCommandInput,
    cb: (err: any, data?: CreateIPSetCommandOutput) => void
  ): void;
  createIPSet(
    args: CreateIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateIPSetCommandOutput) => void
  ): void;
  createRateBasedRule(
    args: CreateRateBasedRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRateBasedRuleCommandOutput>;
  createRateBasedRule(
    args: CreateRateBasedRuleCommandInput,
    cb: (err: any, data?: CreateRateBasedRuleCommandOutput) => void
  ): void;
  createRateBasedRule(
    args: CreateRateBasedRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRateBasedRuleCommandOutput) => void
  ): void;
  createRegexMatchSet(
    args: CreateRegexMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRegexMatchSetCommandOutput>;
  createRegexMatchSet(
    args: CreateRegexMatchSetCommandInput,
    cb: (err: any, data?: CreateRegexMatchSetCommandOutput) => void
  ): void;
  createRegexMatchSet(
    args: CreateRegexMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRegexMatchSetCommandOutput) => void
  ): void;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRegexPatternSetCommandOutput>;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void
  ): void;
  createRegexPatternSet(
    args: CreateRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRegexPatternSetCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleCommandOutput>;
  createRule(
    args: CreateRuleCommandInput,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleGroupCommandOutput>;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createRuleGroup(
    args: CreateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleGroupCommandOutput) => void
  ): void;
  createSizeConstraintSet(
    args: CreateSizeConstraintSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSizeConstraintSetCommandOutput>;
  createSizeConstraintSet(
    args: CreateSizeConstraintSetCommandInput,
    cb: (err: any, data?: CreateSizeConstraintSetCommandOutput) => void
  ): void;
  createSizeConstraintSet(
    args: CreateSizeConstraintSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSizeConstraintSetCommandOutput) => void
  ): void;
  createSqlInjectionMatchSet(
    args: CreateSqlInjectionMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSqlInjectionMatchSetCommandOutput>;
  createSqlInjectionMatchSet(
    args: CreateSqlInjectionMatchSetCommandInput,
    cb: (err: any, data?: CreateSqlInjectionMatchSetCommandOutput) => void
  ): void;
  createSqlInjectionMatchSet(
    args: CreateSqlInjectionMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSqlInjectionMatchSetCommandOutput) => void
  ): void;
  createWebACL(
    args: CreateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateWebACLCommandOutput>;
  createWebACL(
    args: CreateWebACLCommandInput,
    cb: (err: any, data?: CreateWebACLCommandOutput) => void
  ): void;
  createWebACL(
    args: CreateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateWebACLCommandOutput) => void
  ): void;
  createWebACLMigrationStack(
    args: CreateWebACLMigrationStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateWebACLMigrationStackCommandOutput>;
  createWebACLMigrationStack(
    args: CreateWebACLMigrationStackCommandInput,
    cb: (err: any, data?: CreateWebACLMigrationStackCommandOutput) => void
  ): void;
  createWebACLMigrationStack(
    args: CreateWebACLMigrationStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateWebACLMigrationStackCommandOutput) => void
  ): void;
  createXssMatchSet(
    args: CreateXssMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateXssMatchSetCommandOutput>;
  createXssMatchSet(
    args: CreateXssMatchSetCommandInput,
    cb: (err: any, data?: CreateXssMatchSetCommandOutput) => void
  ): void;
  createXssMatchSet(
    args: CreateXssMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateXssMatchSetCommandOutput) => void
  ): void;
  deleteByteMatchSet(
    args: DeleteByteMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteByteMatchSetCommandOutput>;
  deleteByteMatchSet(
    args: DeleteByteMatchSetCommandInput,
    cb: (err: any, data?: DeleteByteMatchSetCommandOutput) => void
  ): void;
  deleteByteMatchSet(
    args: DeleteByteMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteByteMatchSetCommandOutput) => void
  ): void;
  deleteGeoMatchSet(
    args: DeleteGeoMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteGeoMatchSetCommandOutput>;
  deleteGeoMatchSet(
    args: DeleteGeoMatchSetCommandInput,
    cb: (err: any, data?: DeleteGeoMatchSetCommandOutput) => void
  ): void;
  deleteGeoMatchSet(
    args: DeleteGeoMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteGeoMatchSetCommandOutput) => void
  ): void;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteIPSetCommandOutput>;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    cb: (err: any, data?: DeleteIPSetCommandOutput) => void
  ): void;
  deleteIPSet(
    args: DeleteIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteIPSetCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoggingConfigurationCommandOutput>;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deleteLoggingConfiguration(
    args: DeleteLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoggingConfigurationCommandOutput) => void
  ): void;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeletePermissionPolicyCommandOutput>;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void
  ): void;
  deletePermissionPolicy(
    args: DeletePermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeletePermissionPolicyCommandOutput) => void
  ): void;
  deleteRateBasedRule(
    args: DeleteRateBasedRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRateBasedRuleCommandOutput>;
  deleteRateBasedRule(
    args: DeleteRateBasedRuleCommandInput,
    cb: (err: any, data?: DeleteRateBasedRuleCommandOutput) => void
  ): void;
  deleteRateBasedRule(
    args: DeleteRateBasedRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRateBasedRuleCommandOutput) => void
  ): void;
  deleteRegexMatchSet(
    args: DeleteRegexMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRegexMatchSetCommandOutput>;
  deleteRegexMatchSet(
    args: DeleteRegexMatchSetCommandInput,
    cb: (err: any, data?: DeleteRegexMatchSetCommandOutput) => void
  ): void;
  deleteRegexMatchSet(
    args: DeleteRegexMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRegexMatchSetCommandOutput) => void
  ): void;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRegexPatternSetCommandOutput>;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void
  ): void;
  deleteRegexPatternSet(
    args: DeleteRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRegexPatternSetCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleCommandOutput>;
  deleteRule(
    args: DeleteRuleCommandInput,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleGroupCommandOutput>;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteRuleGroup(
    args: DeleteRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleGroupCommandOutput) => void
  ): void;
  deleteSizeConstraintSet(
    args: DeleteSizeConstraintSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSizeConstraintSetCommandOutput>;
  deleteSizeConstraintSet(
    args: DeleteSizeConstraintSetCommandInput,
    cb: (err: any, data?: DeleteSizeConstraintSetCommandOutput) => void
  ): void;
  deleteSizeConstraintSet(
    args: DeleteSizeConstraintSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSizeConstraintSetCommandOutput) => void
  ): void;
  deleteSqlInjectionMatchSet(
    args: DeleteSqlInjectionMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSqlInjectionMatchSetCommandOutput>;
  deleteSqlInjectionMatchSet(
    args: DeleteSqlInjectionMatchSetCommandInput,
    cb: (err: any, data?: DeleteSqlInjectionMatchSetCommandOutput) => void
  ): void;
  deleteSqlInjectionMatchSet(
    args: DeleteSqlInjectionMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSqlInjectionMatchSetCommandOutput) => void
  ): void;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteWebACLCommandOutput>;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    cb: (err: any, data?: DeleteWebACLCommandOutput) => void
  ): void;
  deleteWebACL(
    args: DeleteWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteWebACLCommandOutput) => void
  ): void;
  deleteXssMatchSet(
    args: DeleteXssMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteXssMatchSetCommandOutput>;
  deleteXssMatchSet(
    args: DeleteXssMatchSetCommandInput,
    cb: (err: any, data?: DeleteXssMatchSetCommandOutput) => void
  ): void;
  deleteXssMatchSet(
    args: DeleteXssMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteXssMatchSetCommandOutput) => void
  ): void;
  getByteMatchSet(
    args: GetByteMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetByteMatchSetCommandOutput>;
  getByteMatchSet(
    args: GetByteMatchSetCommandInput,
    cb: (err: any, data?: GetByteMatchSetCommandOutput) => void
  ): void;
  getByteMatchSet(
    args: GetByteMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetByteMatchSetCommandOutput) => void
  ): void;
  getChangeToken(): Promise<GetChangeTokenCommandOutput>;
  getChangeToken(
    args: GetChangeTokenCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetChangeTokenCommandOutput>;
  getChangeToken(
    args: GetChangeTokenCommandInput,
    cb: (err: any, data?: GetChangeTokenCommandOutput) => void
  ): void;
  getChangeToken(
    args: GetChangeTokenCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetChangeTokenCommandOutput) => void
  ): void;
  getChangeTokenStatus(
    args: GetChangeTokenStatusCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetChangeTokenStatusCommandOutput>;
  getChangeTokenStatus(
    args: GetChangeTokenStatusCommandInput,
    cb: (err: any, data?: GetChangeTokenStatusCommandOutput) => void
  ): void;
  getChangeTokenStatus(
    args: GetChangeTokenStatusCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetChangeTokenStatusCommandOutput) => void
  ): void;
  getGeoMatchSet(
    args: GetGeoMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetGeoMatchSetCommandOutput>;
  getGeoMatchSet(
    args: GetGeoMatchSetCommandInput,
    cb: (err: any, data?: GetGeoMatchSetCommandOutput) => void
  ): void;
  getGeoMatchSet(
    args: GetGeoMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetGeoMatchSetCommandOutput) => void
  ): void;
  getIPSet(
    args: GetIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIPSetCommandOutput>;
  getIPSet(
    args: GetIPSetCommandInput,
    cb: (err: any, data?: GetIPSetCommandOutput) => void
  ): void;
  getIPSet(
    args: GetIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIPSetCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoggingConfigurationCommandOutput>;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getLoggingConfiguration(
    args: GetLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoggingConfigurationCommandOutput) => void
  ): void;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetPermissionPolicyCommandOutput>;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void
  ): void;
  getPermissionPolicy(
    args: GetPermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetPermissionPolicyCommandOutput) => void
  ): void;
  getRateBasedRule(
    args: GetRateBasedRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRateBasedRuleCommandOutput>;
  getRateBasedRule(
    args: GetRateBasedRuleCommandInput,
    cb: (err: any, data?: GetRateBasedRuleCommandOutput) => void
  ): void;
  getRateBasedRule(
    args: GetRateBasedRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRateBasedRuleCommandOutput) => void
  ): void;
  getRateBasedRuleManagedKeys(
    args: GetRateBasedRuleManagedKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRateBasedRuleManagedKeysCommandOutput>;
  getRateBasedRuleManagedKeys(
    args: GetRateBasedRuleManagedKeysCommandInput,
    cb: (err: any, data?: GetRateBasedRuleManagedKeysCommandOutput) => void
  ): void;
  getRateBasedRuleManagedKeys(
    args: GetRateBasedRuleManagedKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRateBasedRuleManagedKeysCommandOutput) => void
  ): void;
  getRegexMatchSet(
    args: GetRegexMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRegexMatchSetCommandOutput>;
  getRegexMatchSet(
    args: GetRegexMatchSetCommandInput,
    cb: (err: any, data?: GetRegexMatchSetCommandOutput) => void
  ): void;
  getRegexMatchSet(
    args: GetRegexMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRegexMatchSetCommandOutput) => void
  ): void;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRegexPatternSetCommandOutput>;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void
  ): void;
  getRegexPatternSet(
    args: GetRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRegexPatternSetCommandOutput) => void
  ): void;
  getRule(
    args: GetRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRuleCommandOutput>;
  getRule(
    args: GetRuleCommandInput,
    cb: (err: any, data?: GetRuleCommandOutput) => void
  ): void;
  getRule(
    args: GetRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRuleCommandOutput) => void
  ): void;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRuleGroupCommandOutput>;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    cb: (err: any, data?: GetRuleGroupCommandOutput) => void
  ): void;
  getRuleGroup(
    args: GetRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRuleGroupCommandOutput) => void
  ): void;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSampledRequestsCommandOutput>;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    cb: (err: any, data?: GetSampledRequestsCommandOutput) => void
  ): void;
  getSampledRequests(
    args: GetSampledRequestsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSampledRequestsCommandOutput) => void
  ): void;
  getSizeConstraintSet(
    args: GetSizeConstraintSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSizeConstraintSetCommandOutput>;
  getSizeConstraintSet(
    args: GetSizeConstraintSetCommandInput,
    cb: (err: any, data?: GetSizeConstraintSetCommandOutput) => void
  ): void;
  getSizeConstraintSet(
    args: GetSizeConstraintSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSizeConstraintSetCommandOutput) => void
  ): void;
  getSqlInjectionMatchSet(
    args: GetSqlInjectionMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSqlInjectionMatchSetCommandOutput>;
  getSqlInjectionMatchSet(
    args: GetSqlInjectionMatchSetCommandInput,
    cb: (err: any, data?: GetSqlInjectionMatchSetCommandOutput) => void
  ): void;
  getSqlInjectionMatchSet(
    args: GetSqlInjectionMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSqlInjectionMatchSetCommandOutput) => void
  ): void;
  getWebACL(
    args: GetWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetWebACLCommandOutput>;
  getWebACL(
    args: GetWebACLCommandInput,
    cb: (err: any, data?: GetWebACLCommandOutput) => void
  ): void;
  getWebACL(
    args: GetWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetWebACLCommandOutput) => void
  ): void;
  getXssMatchSet(
    args: GetXssMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetXssMatchSetCommandOutput>;
  getXssMatchSet(
    args: GetXssMatchSetCommandInput,
    cb: (err: any, data?: GetXssMatchSetCommandOutput) => void
  ): void;
  getXssMatchSet(
    args: GetXssMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetXssMatchSetCommandOutput) => void
  ): void;
  listActivatedRulesInRuleGroup(): Promise<ListActivatedRulesInRuleGroupCommandOutput>;
  listActivatedRulesInRuleGroup(
    args: ListActivatedRulesInRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListActivatedRulesInRuleGroupCommandOutput>;
  listActivatedRulesInRuleGroup(
    args: ListActivatedRulesInRuleGroupCommandInput,
    cb: (err: any, data?: ListActivatedRulesInRuleGroupCommandOutput) => void
  ): void;
  listActivatedRulesInRuleGroup(
    args: ListActivatedRulesInRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListActivatedRulesInRuleGroupCommandOutput) => void
  ): void;
  listByteMatchSets(): Promise<ListByteMatchSetsCommandOutput>;
  listByteMatchSets(
    args: ListByteMatchSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListByteMatchSetsCommandOutput>;
  listByteMatchSets(
    args: ListByteMatchSetsCommandInput,
    cb: (err: any, data?: ListByteMatchSetsCommandOutput) => void
  ): void;
  listByteMatchSets(
    args: ListByteMatchSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListByteMatchSetsCommandOutput) => void
  ): void;
  listGeoMatchSets(): Promise<ListGeoMatchSetsCommandOutput>;
  listGeoMatchSets(
    args: ListGeoMatchSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListGeoMatchSetsCommandOutput>;
  listGeoMatchSets(
    args: ListGeoMatchSetsCommandInput,
    cb: (err: any, data?: ListGeoMatchSetsCommandOutput) => void
  ): void;
  listGeoMatchSets(
    args: ListGeoMatchSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListGeoMatchSetsCommandOutput) => void
  ): void;
  listIPSets(): Promise<ListIPSetsCommandOutput>;
  listIPSets(
    args: ListIPSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIPSetsCommandOutput>;
  listIPSets(
    args: ListIPSetsCommandInput,
    cb: (err: any, data?: ListIPSetsCommandOutput) => void
  ): void;
  listIPSets(
    args: ListIPSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIPSetsCommandOutput) => void
  ): void;
  listLoggingConfigurations(): Promise<ListLoggingConfigurationsCommandOutput>;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListLoggingConfigurationsCommandOutput>;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listLoggingConfigurations(
    args: ListLoggingConfigurationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListLoggingConfigurationsCommandOutput) => void
  ): void;
  listRateBasedRules(): Promise<ListRateBasedRulesCommandOutput>;
  listRateBasedRules(
    args: ListRateBasedRulesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRateBasedRulesCommandOutput>;
  listRateBasedRules(
    args: ListRateBasedRulesCommandInput,
    cb: (err: any, data?: ListRateBasedRulesCommandOutput) => void
  ): void;
  listRateBasedRules(
    args: ListRateBasedRulesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRateBasedRulesCommandOutput) => void
  ): void;
  listRegexMatchSets(): Promise<ListRegexMatchSetsCommandOutput>;
  listRegexMatchSets(
    args: ListRegexMatchSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRegexMatchSetsCommandOutput>;
  listRegexMatchSets(
    args: ListRegexMatchSetsCommandInput,
    cb: (err: any, data?: ListRegexMatchSetsCommandOutput) => void
  ): void;
  listRegexMatchSets(
    args: ListRegexMatchSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRegexMatchSetsCommandOutput) => void
  ): void;
  listRegexPatternSets(): Promise<ListRegexPatternSetsCommandOutput>;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRegexPatternSetsCommandOutput>;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void
  ): void;
  listRegexPatternSets(
    args: ListRegexPatternSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRegexPatternSetsCommandOutput) => void
  ): void;
  listRuleGroups(): Promise<ListRuleGroupsCommandOutput>;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRuleGroupsCommandOutput>;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listRuleGroups(
    args: ListRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRuleGroupsCommandOutput) => void
  ): void;
  listRules(): Promise<ListRulesCommandOutput>;
  listRules(
    args: ListRulesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListRulesCommandOutput>;
  listRules(
    args: ListRulesCommandInput,
    cb: (err: any, data?: ListRulesCommandOutput) => void
  ): void;
  listRules(
    args: ListRulesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListRulesCommandOutput) => void
  ): void;
  listSizeConstraintSets(): Promise<ListSizeConstraintSetsCommandOutput>;
  listSizeConstraintSets(
    args: ListSizeConstraintSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSizeConstraintSetsCommandOutput>;
  listSizeConstraintSets(
    args: ListSizeConstraintSetsCommandInput,
    cb: (err: any, data?: ListSizeConstraintSetsCommandOutput) => void
  ): void;
  listSizeConstraintSets(
    args: ListSizeConstraintSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSizeConstraintSetsCommandOutput) => void
  ): void;
  listSqlInjectionMatchSets(): Promise<ListSqlInjectionMatchSetsCommandOutput>;
  listSqlInjectionMatchSets(
    args: ListSqlInjectionMatchSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSqlInjectionMatchSetsCommandOutput>;
  listSqlInjectionMatchSets(
    args: ListSqlInjectionMatchSetsCommandInput,
    cb: (err: any, data?: ListSqlInjectionMatchSetsCommandOutput) => void
  ): void;
  listSqlInjectionMatchSets(
    args: ListSqlInjectionMatchSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSqlInjectionMatchSetsCommandOutput) => void
  ): void;
  listSubscribedRuleGroups(): Promise<ListSubscribedRuleGroupsCommandOutput>;
  listSubscribedRuleGroups(
    args: ListSubscribedRuleGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSubscribedRuleGroupsCommandOutput>;
  listSubscribedRuleGroups(
    args: ListSubscribedRuleGroupsCommandInput,
    cb: (err: any, data?: ListSubscribedRuleGroupsCommandOutput) => void
  ): void;
  listSubscribedRuleGroups(
    args: ListSubscribedRuleGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSubscribedRuleGroupsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listWebACLs(): Promise<ListWebACLsCommandOutput>;
  listWebACLs(
    args: ListWebACLsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListWebACLsCommandOutput>;
  listWebACLs(
    args: ListWebACLsCommandInput,
    cb: (err: any, data?: ListWebACLsCommandOutput) => void
  ): void;
  listWebACLs(
    args: ListWebACLsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListWebACLsCommandOutput) => void
  ): void;
  listXssMatchSets(): Promise<ListXssMatchSetsCommandOutput>;
  listXssMatchSets(
    args: ListXssMatchSetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListXssMatchSetsCommandOutput>;
  listXssMatchSets(
    args: ListXssMatchSetsCommandInput,
    cb: (err: any, data?: ListXssMatchSetsCommandOutput) => void
  ): void;
  listXssMatchSets(
    args: ListXssMatchSetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListXssMatchSetsCommandOutput) => void
  ): void;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutLoggingConfigurationCommandOutput>;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void
  ): void;
  putLoggingConfiguration(
    args: PutLoggingConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutLoggingConfigurationCommandOutput) => void
  ): void;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutPermissionPolicyCommandOutput>;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void
  ): void;
  putPermissionPolicy(
    args: PutPermissionPolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutPermissionPolicyCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateByteMatchSet(
    args: UpdateByteMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateByteMatchSetCommandOutput>;
  updateByteMatchSet(
    args: UpdateByteMatchSetCommandInput,
    cb: (err: any, data?: UpdateByteMatchSetCommandOutput) => void
  ): void;
  updateByteMatchSet(
    args: UpdateByteMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateByteMatchSetCommandOutput) => void
  ): void;
  updateGeoMatchSet(
    args: UpdateGeoMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateGeoMatchSetCommandOutput>;
  updateGeoMatchSet(
    args: UpdateGeoMatchSetCommandInput,
    cb: (err: any, data?: UpdateGeoMatchSetCommandOutput) => void
  ): void;
  updateGeoMatchSet(
    args: UpdateGeoMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateGeoMatchSetCommandOutput) => void
  ): void;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateIPSetCommandOutput>;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    cb: (err: any, data?: UpdateIPSetCommandOutput) => void
  ): void;
  updateIPSet(
    args: UpdateIPSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateIPSetCommandOutput) => void
  ): void;
  updateRateBasedRule(
    args: UpdateRateBasedRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRateBasedRuleCommandOutput>;
  updateRateBasedRule(
    args: UpdateRateBasedRuleCommandInput,
    cb: (err: any, data?: UpdateRateBasedRuleCommandOutput) => void
  ): void;
  updateRateBasedRule(
    args: UpdateRateBasedRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRateBasedRuleCommandOutput) => void
  ): void;
  updateRegexMatchSet(
    args: UpdateRegexMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRegexMatchSetCommandOutput>;
  updateRegexMatchSet(
    args: UpdateRegexMatchSetCommandInput,
    cb: (err: any, data?: UpdateRegexMatchSetCommandOutput) => void
  ): void;
  updateRegexMatchSet(
    args: UpdateRegexMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRegexMatchSetCommandOutput) => void
  ): void;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRegexPatternSetCommandOutput>;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void
  ): void;
  updateRegexPatternSet(
    args: UpdateRegexPatternSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRegexPatternSetCommandOutput) => void
  ): void;
  updateRule(
    args: UpdateRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleCommandOutput>;
  updateRule(
    args: UpdateRuleCommandInput,
    cb: (err: any, data?: UpdateRuleCommandOutput) => void
  ): void;
  updateRule(
    args: UpdateRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRuleGroupCommandOutput>;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateRuleGroup(
    args: UpdateRuleGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRuleGroupCommandOutput) => void
  ): void;
  updateSizeConstraintSet(
    args: UpdateSizeConstraintSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSizeConstraintSetCommandOutput>;
  updateSizeConstraintSet(
    args: UpdateSizeConstraintSetCommandInput,
    cb: (err: any, data?: UpdateSizeConstraintSetCommandOutput) => void
  ): void;
  updateSizeConstraintSet(
    args: UpdateSizeConstraintSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSizeConstraintSetCommandOutput) => void
  ): void;
  updateSqlInjectionMatchSet(
    args: UpdateSqlInjectionMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSqlInjectionMatchSetCommandOutput>;
  updateSqlInjectionMatchSet(
    args: UpdateSqlInjectionMatchSetCommandInput,
    cb: (err: any, data?: UpdateSqlInjectionMatchSetCommandOutput) => void
  ): void;
  updateSqlInjectionMatchSet(
    args: UpdateSqlInjectionMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSqlInjectionMatchSetCommandOutput) => void
  ): void;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateWebACLCommandOutput>;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    cb: (err: any, data?: UpdateWebACLCommandOutput) => void
  ): void;
  updateWebACL(
    args: UpdateWebACLCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateWebACLCommandOutput) => void
  ): void;
  updateXssMatchSet(
    args: UpdateXssMatchSetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateXssMatchSetCommandOutput>;
  updateXssMatchSet(
    args: UpdateXssMatchSetCommandInput,
    cb: (err: any, data?: UpdateXssMatchSetCommandOutput) => void
  ): void;
  updateXssMatchSet(
    args: UpdateXssMatchSetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateXssMatchSetCommandOutput) => void
  ): void;
}
export declare class WAF extends WAFClient implements WAF {}
